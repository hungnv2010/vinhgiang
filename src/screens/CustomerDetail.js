import React, { useCallback, useEffect, useRef, useState } from 'react';
import { OrderForm, Screen } from '../containers';
import { ApiService } from '../services';
import { NativeModules, Linking, Platform, ToastAndroid, PermissionsAndroid, ActivityIndicator, View, Text, Image, RefreshControl, TextInput, TouchableOpacity, FlatList } from 'react-native';
import { Asset, Colors, Styles } from '../configs';
import SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';
import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';
import Ionicons from 'react-native-vector-icons/Ionicons'
import FSModal from '../components/FSModal';
import { Button } from 'react-native-elements/dist/buttons/Button';
import { CheckBox } from 'react-native-elements';
import { ChangeAlias } from '../configs/Utils';
import { FAB } from 'react-native-elements';
import Geolocation from 'react-native-geolocation-service';
import moment from 'moment';
import messageService from '../services/messages';
import { ScrollView } from 'react-native-gesture-handler';
import { forEach } from 'lodash';
// import ImagePicker from 'react-native-image-crop-picker';

var ImagePicker = NativeModules.ImageCropPicker;

const MODAL_UPLOAD = 1
const MODAL_PROVINCE = 2
const MODAL_DISTRICT = 3
const MODAL_WARDS = 4

const CustomerDetail = (props) => {
    const testBase64 =""
    +""
    +"" 
    + ""
    +"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"
    +""
    +""
    +"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"
    const { navigation, route, params } = props;
    const title = 'Chi tiết khách hàng';
    const [latitude, setLatitude] = useState("")
    const [longitude, setLongitude] = useState("")
    const [listImage, setListImage] = useState([])

    const [customer, setCustomer] = useState(route.params ? route.params : {})
    const [showModal, setShowModal] = useState(false);
    const [listProvice, setListProvice] = useState([]);
    const [provice, setProvice] = useState(customer.country_id? {id: customer.country_id[0], name: customer.country_id[1]} :'');

    const [district, setDistrict] = useState(customer.state_id? {id: customer.state_id[0], name: customer.state_id[1]} :'');

    const [wards, setWards] = useState(customer.ward_id? {id: customer.ward_id[0], name: customer.ward_id[1]} :'');

    const typeModal = useRef(0);
    const listDataProvice = useRef([]);

    useEffect(() => {
        getListImage();
    }, []);

    const getListImage = async () => {
        if(!customer.id) return
        let getImages = await ApiService.getImages(customer.id)
        if(getImages.data && getImages.data.length){
            let listDatas = getImages.data
            listDatas.forEach(element => {
                 if(element.datas.slice(0, 2) == "b'") element.data = element.datas.slice(2)

            })
            console.log("getImages data", listDatas);

            setListImage(listDatas)
        }
    }


    const goBack = () => {
        if (route?.params?.goBack) {
            route.params.goBack();
        }
        navigation.goBack();
    };

    const hasPermissionIOS = async () => {
        const openSetting = () => {
            Linking.openSettings().catch(() => {
                Alert.alert('Unable to open settings');
            });
        };
        const status = await Geolocation.requestAuthorization('whenInUse');

        if (status === 'granted') {
            return true;
        }

        if (status === 'denied') {
            Alert.alert('Location permission denied');
        }

        if (status === 'disabled') {
            Alert.alert(
                `Turn on Location Services to allow "${appConfig.displayName}" to determine your location.`,
                '',
                [
                    { text: 'Go to Settings', onPress: openSetting },
                    { text: "Don't Use Location", onPress: () => { } },
                ],
            );
        }

        return false;
    };

    const hasLocationPermission = async () => {
        if (Platform.OS === 'ios') {
            const hasPermission = await hasPermissionIOS();
            return hasPermission;
        }
        if (Platform.OS === 'android' && Platform.Version < 23) {
            return true;
        }
        const hasPermission = await PermissionsAndroid.check(
            PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,
        );
        if (hasPermission) {
            return true;
        }
        const status = await PermissionsAndroid.request(
            PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,
        );
        if (status === PermissionsAndroid.RESULTS.GRANTED) {
            return true;
        }
        if (status === PermissionsAndroid.RESULTS.DENIED) {
            messageService.showInfo("Location permission denied by user.")
        } else if (status === PermissionsAndroid.RESULTS.NEVER_ASK_AGAIN) {
            messageService.showInfo("Location permission revoked by user.")
        }
        return false;
    };

    useEffect(() => {
        getPosition()
        getDataCountry()
    }, []);

    const getDataCountry = async () => {
        let getCountry = await ApiService.getCountry()
        // let getCountryState = await ApiService.getCountryState()
        // let getWard = await ApiService.getWard()
        if (getCountry.data && getCountry.data.length > 0) {
            listDataProvice.current = getCountry.data
        }
        console.log("getCountry ", JSON.stringify(getCountry));
        // console.log("getCountryState ", JSON.stringify(getCountryState));
        // console.log("getWard ", JSON.stringify(getWard));

    }

    const getPosition = async () => {
        const hasPermission = await hasLocationPermission();
        if (hasPermission) {
            Geolocation.getCurrentPosition(
                (position) => {
                    setLongitude(position.coords.longitude)
                    setLatitude(position.coords.latitude)
                    console.log(position);
                },
                (error) => {
                    console.log(error);
                },
                {
                    accuracy: {
                        android: 'high',
                        ios: 'best',
                    },
                    enableHighAccuracy: true,
                    timeout: 15000,
                    maximumAge: 10000,
                    distanceFilter: 0,
                    forceRequestLocation: true,
                    forceLocationManager: false,
                    showLocationDialog: true,
                },
            );
        };
    }

    const onClickApply = async () => {
        if (!checkDataApply())
            return;
        let body = {
            "phone": customer.phone,
            "name": customer.name,
            "street": customer.street ? customer.street : "",
            // "street2": customer.street2 ? customer.street2 : "",
            "ward_id": wards != "" ? wards.id : -1,
            "state_id": district != "" ? district.id : -1,
            "country_id": provice != "" ? provice.id : -1,
            "vehicle_route": 1,
            "name_store": customer.name_store ? customer.name_store : "",
            // "code_ch_vg": customer.code_ch_vg ? customer.code_ch_vg : "",//"Ma cua hang vinhgiang",
            "code_ch_ncc1": customer.code_ch_ncc1 ? customer.code_ch_ncc1 : "", //"Ma cua hang ncc1",
            "code_ch_ncc2": customer.code_ch_ncc2 ? customer.code_ch_ncc2 : "",//"Ma cua hang ncc2",
            "code_ch_ncc3": customer.code_ch_ncc3 ? customer.code_ch_ncc3 : "",//"Ma cua hang ncc3",
            "date_localization": moment().format('YYYY-MM-DD'),
            "partner_latitude": latitude,
            "partner_longitude": longitude,
        }
        if (customer.id && customer.id != "") {
            body["id"] = customer.id
        }
        if (customer.id && customer.id != "") {
            await ApiService.editCustomer(body).then(res => {
                messageService.showSuccess(`${customer.id ? 'Cập nhật' : 'Thêm mới'} khách hàng thành công`);
                goBack()
            }).catch(err => {
                messageService.showError('Có lỗi trong quá trình xử lý');
                console.log("addCustomer err ", JSON.stringify(err));
            })
        } else {
            await ApiService.addCustomer(body).then(res => {
                messageService.showSuccess(`${customer.id ? 'Cập nhật' : 'Thêm mới'} khách hàng thành công`);
                goBack()
            }).catch(err => {
                messageService.showError('Có lỗi trong quá trình xử lý');
                console.log("addCustomer err ", JSON.stringify(err));
            })
        }
    }

    const checkDataApply = () => {
        if (!customer.name || customer.name.trim() == "") {
            messageService.showError('Vui lòng nhập tên khách hàng');
            return false
        } else if (!customer.phone || customer.phone.trim() == "") {
            messageService.showError('Vui lòng nhập số điện thoại khách hàng');
            return false
        } else if (!customer.name_store || customer.name_store.trim() == "") {
            messageService.showError('Vui lòng nhập tên cửa hàng');
            return false
        }
        return true;
    }

    const onClickUpImage = () => {
        typeModal.current = MODAL_UPLOAD;
        setShowModal(true);
    }

    const onOpenSelectAdress = (type) => {
        typeModal.current = type;
        let listTmp = []
        switch (typeModal.current) {
            case MODAL_PROVINCE:
                setListProvice([...listDataProvice.current]);
                setDistrict("")
                setWards("")
                break;
            case MODAL_DISTRICT:
                if (provice == "") return;
                listTmp = listDataProvice.current.filter(item => item.id == provice.id)[0]
                setListProvice(listTmp.state_ids);
                setWards("")
                break;
            case MODAL_WARDS:
                if (district == "" || listProvice.length == 0) return;
                listTmp = listProvice.filter(item => item.id == district.id)[0].ward_ids
                setListProvice([...listTmp]);
                break;
            default:
                break;
        }
        setShowModal(true);
    }

    const filterSelectAdress = (filterKey) => {
        let listTmp = []
        switch (typeModal.current) {
            case MODAL_PROVINCE:
                setListProvice([...listDataProvice.current].filter(value => ChangeAlias(value.name).toLowerCase().includes(filterKey)));
                break;
            case MODAL_DISTRICT:
                if (provice == "") return;
                listTmp = listDataProvice.current.filter(item => item.id == provice.id)[0].state_ids.filter(value => ChangeAlias(value.name).toLowerCase().includes(filterKey))
                setListProvice(listTmp)
                break;
            case MODAL_WARDS:
                if (district == "") return;
                listTmp = listDataProvice.current.filter(item => item.id == provice.id)[0].state_ids.filter(item => item.id == district.id)[0].ward_ids.filter(value => ChangeAlias(value.name).toLowerCase().includes(filterKey))
                setListProvice([...listTmp]);
                break;
            default:
                break;
        }
    }

    const onClickCamera = () => {
        ImagePicker.openCamera({
            width: 300,
            height: 300,
            cropping: true,
            includeBase64: true,

        }).then(image => {
            console.log("onClickCamera images ", image);
            uploadToServer([image]);
        });
    }

    const onClickGallery = () => {
        ImagePicker.openPicker({
            multiple: true,
            includeBase64: true,
            // waitAnimationEnd: false,
            includeExif: true,
            forceJpg: true,
        }).then(images => {
            console.log("onClickGallery images ", images);
            uploadToServer(images);
        }).catch(e => alert(e));
    }

    const uploadToServer = async (data) => {
        let files = [];
        data.forEach(element => {
            files.push({ datas: element.data, filename: data.filename != null && data.filename != '' ? data.filename : Math.random().toString() })
        });
        let body = {
            id: customer.id,
            files: files
        }

        let uploadToServer = await ApiService.uploadImage(body)
        setShowModal(false)
        setListImage([...listImage, ...data])
        console.log("uploadToServer ", JSON.stringify(uploadToServer));
    }

    const onClickProvice = (item) => {
        switch (typeModal.current) {
            case MODAL_PROVINCE:
                setProvice(item)
                break;
            case MODAL_DISTRICT:
                setDistrict(item)
                break;
            case MODAL_WARDS:
                setWards(item)
                break;
            default:
                break;
        }
        setShowModal(false)
    }

    const renderCategori = () => {
        if (typeModal.current == MODAL_UPLOAD)
            return <View style={Styles.productViewModalCategori}>
                <MaterialCommunityIcons onPress={() => { setShowModal(false) }} style={Styles.productIconCloseModalCategori} name={"close"} color={Colors.gray_aaa} size={26} />
                <TouchableOpacity onPress={() => onClickCamera()} style={[Styles.productViewApply, { marginTop: 25, height: 50 }]}>
                    <Text style={Styles.productTextApply}>Camera</Text>
                </TouchableOpacity>
                <TouchableOpacity onPress={() => onClickGallery()} style={[Styles.productViewApply, { marginVertical: 20, height: 50 }]}>
                    <Text style={Styles.productTextApply}>Thư viện</Text>
                </TouchableOpacity>
            </View>
        if (typeModal.current == MODAL_PROVINCE || typeModal.current == MODAL_DISTRICT || typeModal.current == MODAL_WARDS) {
            let title = (typeModal.current == MODAL_PROVINCE)? "Chọn tỉnh"
                        :(typeModal.current == MODAL_DISTRICT)? "Chọn quận/huyện"
                        :"Chọn xã/phường"
            return <View style={Styles.productViewModalCategori}>
                <View style={{ width: "100%", flexDirection: "row", justifyContent: 'space-between', alignItems:'center' }}>
                    <Text style={{flex: 1, marginLeft:10, textAlign:'center', fontSize: 16, color: Colors.primary}}>{title}</Text>
                    <MaterialCommunityIcons onPress={() => { setShowModal(false) }} name={"close"} color={Colors.gray_aaa} size={26} />
                </View>
                <TextInput
                    paddingLeft= {10}
                    placeholder='Tìm kiếm...'
                    autoFocus={true}
                    onChangeText={(val) => {
                        filterSelectAdress(ChangeAlias(val).toLowerCase())
                    }}
                    style={{color: Colors.black, height: 36, borderWidth: 1, borderRadius: 10, marginHorizontal: 10, marginVertical:5, borderColor: Colors.primary,}}/>
                {/* <MaterialCommunityIcons onPress={() => { setShowModal(false) }} style={[Styles.productIconCloseModalCategori, {marginBottom: 0, paddingBottom: 0}]} name={"close"} color={Colors.gray_aaa} size={26} /> */}
                <ScrollView>
                    {
                        listProvice.map(item => {
                            return <TouchableOpacity onPress={() => onClickProvice(item)} style={[Styles.productViewApply, { marginVertical: 10, height: 50, marginBottom: 10 }]}>
                                <Text style={Styles.productTextApply}>{item.name}</Text>
                            </TouchableOpacity>
                        })
                    }

                </ScrollView>
            </View>
        }

    }

    return (
        <Screen header={title} goBack={() => goBack()}>
            <ScrollView>
                <View style={Styles.detailCustomerViewTextInput}>
                    <TextInput value={customer.name} placeholder='Tên khách hàng' style={Styles.detailCustomerInput} onChangeText={(text) => setCustomer({ ...customer, name: text })} />
                </View>
                <View style={Styles.detailCustomerViewTextInput}>
                    <TextInput keyboardType='numeric' value={customer.phone ? `${customer.phone}` : ''} placeholder='Số điện thoại' style={Styles.detailCustomerInput} onChangeText={(text) => setCustomer({ ...customer, phone: text })} />
                </View>
            
                {/* <View style={Styles.detailCustomerViewTextInput}>
                    <TextInput value={customer.street2} placeholder='Địa chỉ 2' style={Styles.detailCustomerInput} onChangeText={(text) => setCustomer({ ...customer, street2: text })} />
                </View> */}
                <View style={Styles.detailCustomerViewTextInput}>
                    <TextInput value={customer.name_store} placeholder='Tên cửa hàng' style={Styles.detailCustomerInput} onChangeText={(text) => setCustomer({ ...customer, name_store: text })} />
                </View>
                {/* <View style={Styles.detailCustomerViewTextInput}>
                    <TextInput value={customer.code_ch_vg} placeholder='Mã cửa hàng Vĩnh Giang' style={Styles.detailCustomerInput} onChangeText={(text) => setCustomer({ ...customer, code_ch_vg: text })} />
                </View> */}
                <View style={Styles.detailCustomerViewTextInput}>
                    <TextInput value={customer.code_ch_ncc1} placeholder='Mã cửa hàng nhà cung cấp 1' style={Styles.detailCustomerInput} onChangeText={(text) => setCustomer({ ...customer, code_ch_ncc1: text })} />
                </View>
                <View style={Styles.detailCustomerViewTextInput}>
                    <TextInput value={customer.code_ch_ncc2} placeholder='Mã cửa hàng nhà cung cấp 2' style={Styles.detailCustomerInput} onChangeText={(text) => setCustomer({ ...customer, code_ch_ncc2: text })} />
                </View>
                <View style={Styles.detailCustomerViewTextInput}>
                    <TextInput value={customer.code_ch_ncc3} placeholder='Mã cửa hàng nhà cung cấp 3' style={Styles.detailCustomerInput} onChangeText={(text) => setCustomer({ ...customer, code_ch_nc3: text })} />
                </View>

                <Text style={{ color: Colors.primary, marginTop: 10,marginLeft: 5, fontSize: 15}}>Địa chỉ</Text>

                <View style={Styles.detailCustomerViewTextInput}>
                    <TextInput value={customer.street} placeholder='Nhập địa chỉ' style={Styles.detailCustomerInput} onChangeText={(text) => setCustomer({ ...customer, street: text })} />
                </View>
                <View style={{ flexDirection: "row" }}>
                    <TouchableOpacity onPress={() => { onOpenSelectAdress(MODAL_PROVINCE) }} style={[Styles.detailCustomerViewTextInput, { padding: 0, flex: 1, marginRight: 0 }]}>
                        <Text numberOfLines={1} ellipsizeMode="tail" pointerEvents="none" style={{ paddingLeft: 10 }}>{provice != "" ? provice.name : "Tỉnh / thành"}</Text>
                        <MaterialCommunityIcons onPress={() => { setShowModal(false) }} style={{}} name={"menu-down"} color={Colors.black} size={26} />
                    </TouchableOpacity>
                    <TouchableOpacity onPress={() => { onOpenSelectAdress(MODAL_DISTRICT) }} style={[Styles.detailCustomerViewTextInput, { padding: 0, flex: 1, marginRight: 0 }]}>
                        <Text numberOfLines={1} ellipsizeMode="tail" pointerEvents="none" style={{ paddingLeft: 10 }}>{district != "" ? district.name : "Quận / huyện"}</Text>
                        <MaterialCommunityIcons onPress={() => { setShowModal(false) }} style={{}} name={"menu-down"} color={Colors.black} size={26} />
                    </TouchableOpacity>
                    <TouchableOpacity onPress={() => { onOpenSelectAdress(MODAL_WARDS) }} style={[Styles.detailCustomerViewTextInput, { padding: 0, flex: 1 }]}>
                        <Text numberOfLines={1} ellipsizeMode="tail" pointerEvents="none" style={{ paddingLeft: 10 }}>{wards != "" ? wards.name : "Xã / phường"}</Text>
                        <MaterialCommunityIcons onPress={() => { setShowModal(false) }} style={{}} name={"menu-down"} color={Colors.black} size={26} />
                    </TouchableOpacity>
                </View>
                { (customer.id && customer.id != "") ?
                    <ScrollView
                        style={{ padding: 10}}
                        horizontal={true}>
                            
                        <TouchableOpacity onPress={() => onClickUpImage()} style={{ width: 100, height: 100, borderStyle: 'dashed', justifyContent: "center", alignItems: "center", borderColor: "#ddd", borderWidth: 1, borderRadius: 5 }}>
                            <SimpleLineIcons name={"cloud-upload"} color={Colors.gray_aaa} size={40} />
                        </TouchableOpacity>
                        {
                            listImage.map(item => {
                                return <TouchableOpacity style={{ marginLeft: 10, borderColor: "#ddd", borderWidth: 1, borderRadius: 5 }}>
                                    <Image style={{ borderRadius: 5, width: 100, height: 100 }} source={{uri: "data:image/png;base64,"+ item.data}} />
                                </TouchableOpacity>
                            })
                        }
                    </ScrollView>
                :  null
                }
                
                <TouchableOpacity onPress={() => onClickApply()} style={Styles.detailCustomerApply}>
                    <Text style={Styles.detailCustomerTextApply}>Áp dụng</Text>
                </TouchableOpacity>
            </ScrollView>
            <FSModal visible={showModal} children={renderCategori()} />
        </Screen>
    );
};

CustomerDetail.propTypes = {};

CustomerDetail.defaultProps = {};

CustomerDetail.route = 'CustomerDetail';

export default CustomerDetail;
